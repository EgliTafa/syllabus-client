name: Build, Push, and Deploy Frontend to Azure Container App

on:
  push:
    branches:
      - development
      - master
    tags:
      - 'v*.*.*'

permissions:
  contents: read

env:
  ACR_LOGIN_SERVER: syllabusregistry.azurecr.io
  ACR_REPOSITORY: syllabus-client

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.get_tag.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tag version
        id: get_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Azure login (Service Principal)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ steps.get_tag.outputs.version }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:latest

  deploy-to-container-app:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Azure login (Service Principal)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container App
        run: |
          az containerapp update \
            --name syllabus-client-container \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ needs.build-and-push.outputs.image-tag }} 